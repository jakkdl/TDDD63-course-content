Project: Introductory Phase
Introductory tasks

The introductory phase consists of 7 exercises, which should be done in order. These are only introductory and the aim is not to write a perfect solution, this can be done later in the main phase, you should therefore not spend too much time per exercise. Write one program per task.
It is a good idea to play the maps manually to figure out how it works before starting to write the code.

1. Shoot stationary targets.
Start with the provided code and fill in with your own code where told to. Recommended functions to use is provided in the comments in the code. The goal is to destroy all targets before they reappear.

2. Fly to point.
This exercise introduces a new game mode, race (or timing as it is also called), which consists of flying through several checkpoints on time. On this map you will not crash if you fly into the wall. The goal is to be able to complete the course. The easiest way to do this is to fly towards the next checkpoint and then stop the ship (turn around and thrust). After stopping fly towards the next checkpoint and repeat until the race is finished.

Useful functions: nextCheckPoint(), checkPointX(i), checkPointY(i), ai.setPower, ai.getPower, ai.thrust, self functions and those introduced in exercise 1.

3. Fly to stationary targets (optionally stop), shoot them down.
This exercise is very similar to the first exercise, but this time the map is bigger and the ship can move. The goal is to fly to each target and shoot it down. The easiest way is to stop the ship before starting to shoot, otherwise the ships movement may make you miss.

4. Shoot down moving targets.
This exercise introduces asteroids, which are sometimes implemented on maps to introduce additional hazards to players, in addition to other ships.
There are four different sizes of asteroid, which can take a different number of shots before exploding. Upon exploding they split into two smaller asteroids, unless they are of the smallest size, which simply disappear.
The exercise also introduces fuel. You lose fuel (on this map) when shooting, thrusting or colliding with asteroids. If you collide with an asteroid with too little fuel you will die. The goal of this exercise is not to avoid asteroids, so offense is your best defense. The goal is to fly around and destroy asteroids, trying to get as much points as possible before running out of fuel.

Useful functions: Asteroid functions and radar functions.

Useful link: http://playtechs.blogspot.se/2007/04/aiming-at-moving-target.html

5. Avoid walls.
This exercise introduces items. These are valuable powerups you either start with or obtain by flying over. In this exercise all items will be fuel, but other maps can support other types of items. On this map you will die if you fly into the wall, unless it's the back of the ship that touches the wall. The goal is to pick up the items without crashing.

Useful functions: wallFeelerRad(), wallBetween()


REMOVED: 6. Dodge shots.
This map introduces cannons, which can be placed on the map trying to kill unsuspecting players. The cannons are equipped with flakbullets, which will explode into two bullets after a while making them more dangerous than normal bullets.
The goal is to avoid dying for X seconds.
Map lined with cannons. Shooting disabled. Avoid crashing into walls.
##Initially I wanted only to change the exercise and remove the walls, due to the exercise being very hard to do, having to avoid 1. Shots, 2. Walls, and 3. Getting close to the cannon. ShotAlert() is buggy and needs to be looked upon. I'm also running out of time and need to focus on other things, so I deemed it better do ditch this exercise and focus on the main phase instead.

REMOVED: 7. Terminator
Combine into a single bot capable of flying to enemies, shooting them down, avoid walls, and basic shotdodging. Try them out against eachother.
Finally combine all the features of the previous exercises to write a bot that can fly to enemies, shoot them down, avoid their shots and not crash into walls.
It is a good idea to test the bot against other groups' bots, yourself, or another instance of the bot.
##Removed due to not being possible to write specific goals and choose a good map. If people are interested in writing a fighting bot they can choose that in the main phase.

PREVIOUSLY REMOVED:
"Seems to be hard to implement. Should all tasks with obstacle.xp be moved to a milestone or extensoin in the main phase?
Fly to a specific position while avoiding obstacles and walls and stop at the specific position. Use the map obstacles.xp and use the wallFeelerRad() function to detect walls and obstacles. The obstacle.xp map is designed ina way that flying so you get nearer ot teh target while avoiding obstacles will finally get you to the target."

"Maybe moved to main phase??? Add enough functionality to have a reasonable death match with two bot players using the map obstacle.xp"

Main phase
Your group should now have good insight into what you can do with xpilot, and in the main phase your group can decide to focus on the aspect of the game you liked the most. It can be a good idea to compete with another group on the same goal.

Suggestion 1:
  Team bot, old instructions, slightly touched up.
Suggestion 2: Racing
  1. Go back to the bot you made in task 2, and improve it.
  2. Change settings so the ship crashes if it touches the wall.
  3. Add navigation.
  4. Handle fuelstations: Limit the starting fuel, have many laps, limited lives.
  5. Mario Kart: Add items. (phasing, missiles, mines, etc)
  6. Advanced fighting, add shooting.
  7. Handle ball racing. Crazy hard physics.
Suggestion 3: Asteroids
  1. Go back to the bot you made in task 4 and improve it.
  2. Change settings so the ship crashes if it touches an asteroid. Can also increase asteroid density or similar.
  3. Add walls/objects/navigation so you have to both avoid crashing into walls and asteroids (and kill them).
  4. Missile Command: Add negative gravity at 90 degrees, ground and maybe more objects. Handle the gravity.
  5. Write a very dumb ship you must protect. Either have it stationary or trying to race. You lose if it dies.
      Another alternative is to do CTF, carry a heavy ball through a track while being bombarded with asteroids.
  6. Items, crazy settings, anything!
Suggestion 4: Terminator
  Write the ultimate killer robot.
  1. Improve on task 7. See if you can make it beat a human player, or the built-in bots.
  2. Action-movie: Make it handle several enemies, can you make it beat 2 humans? 3? 10?
  3. Don't crash. Walls and other obstacles.
  4. Items. How should you shoot missiles? Where should you position mines?
  5. Navigation. Fight in a maze?
  6. Gravity!
  7. Fuelstations, you need to refuel if you never die.
  8. Wormholes: How awesome isn't it to kill somebody through a wormhole?
  9. Make it capable of fighting on maps made for humans, such as newdarkhell.xp and newdarkhell2.xp

    
Ideas to expand the bot.
*Make a team (old instructions)
*Handle gravity. Spotgravity and/or general gravity.
*Improve current capabilities.
*Racing on different maps.
*Handle balls in CTF.
*Items (Missiles, mines, bonuses)
*fuel
*Wormholes
*Asteroids
*Navigation through maze.
*Varying mapvalues (size,friction,shipmass,shotmass,shotspeed,shotlife,edgewrap, wallbounce, etc.)
